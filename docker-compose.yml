# version: '3.8'

# services:
#   mongo:
#     image: mongo:6.0
#     container_name: mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: admin
#       MONGO_INITDB_ROOT_PASSWORD: secret
#       MONGO_INITDB_DATABASE: mydb
#     restart: always

#   elasticsearch:
#     image: elasticsearch:8.12.0
#     container_name: elasticsearch
#     environment:
#       - discovery.type=single-node
#       - xpack.security.enabled=false
#       - ES_JAVA_OPTS=-Xms512m -Xmx512m
#     ports:
#       - "9200:9200"
#     volumes:
#       - elastic-data:/usr/share/elasticsearch/data
#     restart: always

#   kafka:
#     image: apache/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_KRAFT_MODE: true
#       KAFKA_NODE_ID: 1
#       KAFKA_PROCESS_ROLES: broker,controller
#       KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # הערה: שינוי זה מאפשר גישה לקאפקא גם מהמחשב המארח.
#       KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#       KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_NUM_PARTITIONS: 3
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
#     volumes:
#       - kafka-data:/tmp/kraft-combined-logs
#     restart: always 

#   kafka-ui:
#     image: provectuslabs/kafka-ui:latest
#     container_name: kafka-ui
#     ports:
#       - "8081:8080"
#     environment:
#       - KAFKA_CLUSTERS_0_NAME=local-kafka
#       - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
#     depends_on:
#       - kafka
#     restart: always 
#   api:
#     build: ./app/api
#     container_name: api-gateway
#     ports:
#       - "8080:8080"
#     environment:
#       MONGO_URI: mongodb://admin:secret@mongo:27017/mydb
#       ELASTIC_URI: http://elasticsearch:9200
#       KAFKA_BROKER: kafka:9092
#       KAFKA_TOPIC: my_topic
#       KAFKA_GROUP_ID: my_group
#     depends_on:
#       - mongo
#       - elasticsearch
#       - kafka

#   consumer:
#     build:
#       context: .
#       dockerfile: app/consumer/Dockerfile
#     container_name: consumer
#     environment:
#       KAFKA_BROKER: kafka:9092
#       KAFKA_TOPIC: my_topic
#       KAFKA_GROUP_ID: my_group
#       MONGO_URI: mongodb://admin:secret@mongo:27017/mydb
#       ELASTIC_URI: http://elasticsearch:9200
#     depends_on:
#       - kafka
#       - mongo
#       - elasticsearch
  
#   producer:
#     build:
#       context: .
#       dockerfile: app/producer/Dockerfile
#     container_name: producer
#     environment:
#       KAFKA_BROKER: kafka:9092
#       KAFKA_TOPIC: my_topic
#     depends_on:
#       - kafka

# volumes:
#   mongo-data:
#   elastic-data:
#   kafka-data:





version: '3.8'

services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: mydb
    restart: always

  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.1
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: true
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka-data:/tmp/kraft-combined-logs
    restart: always 
    

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    restart: always 

volumes:
  mongo-data:
  elastic-data:
  kafka-data:
  shared-data: